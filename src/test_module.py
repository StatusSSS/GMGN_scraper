"""
–ü—Ä–æ—Å—Ç–æ–π self-contained —Ç–µ—Å—Ç –∑–∞–ø–∏—Å–∏ –≤ wallet_snapshot —á–µ—Ä–µ–∑
AsyncSession –∏–∑ src.sdk.databases.postgres.dependency.

–ó–∞–ø—É—Å–∫–∞–π—Ç–µ:  python -m src.tests.pg_insert_demo
"""

import asyncio
from datetime import datetime, timezone

from sqlalchemy import select

from src.sdk.databases.postgres.dependency import AsyncSessionLocal
from src.sdk.databases.postgres.models import WalletSnapshot


async def main() -> None:
    async with AsyncSessionLocal() as session:
        # 1Ô∏è‚É£ –ü–∏—à–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
        row = WalletSnapshot(
            address="TEST_WALLET_123",
            pnl=1.234,  # >0.6
            ts_utc=datetime.now(tz=timezone.utc),
        )
        session.add(row)
        await session.commit()
        print("üü¢ insert committed")

        # 2Ô∏è‚É£ –ß–∏—Ç–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
        q = select(WalletSnapshot).where(WalletSnapshot.address == "TEST_WALLET_123")
        result = await session.execute(q)
        fetched = result.scalar_one_or_none()
        print("üîé fetched:", fetched)

        # 3Ô∏è‚É£ –ß–∏—Å—Ç–∏–º –∑–∞ —Å–æ–±–æ–π (—á—Ç–æ–±—ã —Ç–µ—Å—Ç –±—ã–ª –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω—ã–º)
        if fetched:
            await session.delete(fetched)
            await session.commit()
            print("üßπ cleaned")

if __name__ == "__main__":
    asyncio.run(main())
