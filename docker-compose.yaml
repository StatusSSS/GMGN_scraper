services:

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports: ["6379:6379"]
    volumes: [redis-data:/data]


  selenium_gmgn:
    image: selenium/standalone-chrome:138.0.7204.183-chromedriver-138.0.7204.183-grid-4.34.0-20250727
    container_name: selenium-gmgn
    shm_size: "2g"
    ports:
      - "4444:4444"   # UI/API GMGN-ноды
      - "7900:7900"   # noVNC GMGN
    environment:
      - SE_NODE_HEADLESS=false
      - SE_NODE_GRID_URL=http://localhost:4444
    healthcheck:
      test: [ "CMD-SHELL","curl -fsS http://localhost:4444/status | grep -q '\"ready\": *true'" ]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 10s

  selenium_dex:
    # лучше взять такой же “прибитый” образ, как в первом проекте
    image: selenium/standalone-chrome:138.0.7204.183-chromedriver-138.0.7204.183-grid-4.34.0-20250727
    container_name: selenium-dex
    shm_size: "2g"
    ports:
      - "4445:4444"
      - "7901:7900"
    environment:
      # ВАЖНО для Playwright+Grid: адрес, по которому узел регистрируется в хабе
      # (в standalone это сам контейнер → localhost)
      - SE_NODE_GRID_URL=http://localhost:4444
      # чтобы можно было смотреть noVNC, и некоторые антиботы вели себя мягче
      - SE_NODE_HEADLESS=false
      # опционно, чтобы не пересекались сессии
      - SE_NODE_MAX_SESSIONS=1
    healthcheck:
      test: [ "CMD-SHELL","curl -fsS http://localhost:4444/status | grep -q '\"ready\": *true'" ]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 10s


  scraper:
    build: .
    depends_on:
      selenium_dex:
        condition: service_healthy
    environment:
      - SELENIUM_SERVER_URL=http://selenium_dex:4444/wd/hub
    volumes: ["./output:/app/output"]


  producer:
    build:
      context: .
      dockerfile: Dockerfiles/Dockerfile.pnl_produces
    command: python -m src.pnl.pnl_producer
    environment:
      CLICKHOUSE_HOST: ${CLICKHOUSE_HOST}
      CLICKHOUSE_PORT: ${CLICKHOUSE_PORT:-8123}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-default}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DELAY_SEC: ${DELAY_SEC:-10}
    volumes: ["./:/src"]
    depends_on: [redis]



  worker:
    build:
      context: .
      dockerfile: ./Dockerfiles/Dockerfile.pnl_produces
    command: python -m src.scraper.gmgn.sync_scraper
    environment:
      - SELENIUM_REMOTE_URL=http://selenium_gmgn:4444
      - PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
      - DEBUG=pw:browser*
      - PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RESET_QUEUE=1
      - GMGN_WORKERS=1
      - LOG_LEVEL=DEBUG
    volumes: [ "./:/src" ]
    depends_on:
      redis:
        condition: service_started
      selenium_gmgn: # ← сюда!
        condition: service_healthy
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "1"


volumes:
  redis-data: